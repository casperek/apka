const express = require('express');
const http = require('http');
const WebSocket = require('ws');

const app = express();
const server = http.createServer(app);
const wss = new WebSocket.Server({ server });

let songs = [];
let votedSongs = [];

wss.on('connection', (ws) => {
    // Wysyłanie aktualnych danych po nawiązaniu połączenia
    ws.send(JSON.stringify({ type: 'init', data: songs }));

    ws.on('message', (message) => {
        const data = JSON.parse(message);

        if (data.type === 'addSong') {
            const newSong = { title: data.title, votes: 0 };
            songs.push(newSong);
            broadcast({ type: 'update', data: songs });
        } else if (data.type === 'vote') {
            const canVote = !votedSongs.includes(data.index);

            if (canVote) {
                songs[data.index].votes++;
                votedSongs.push(data.index);
                broadcast({ type: 'update', data: songs });
            }
        }
    });
});

function broadcast(message) {
    wss.clients.forEach((client) => {
        if (client.readyState === WebSocket.OPEN) {
            client.send(JSON.stringify(message));
        }
    });
}

const PORT = process.env.PORT || 3000;
const IP_ADDRESS = '192.168.3.25';

server.listen(PORT, IP_ADDRESS, () => {
    console.log(`Server is running on http://${IP_ADDRESS}:${PORT}`);
});

